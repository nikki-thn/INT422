@model Web_app_project_template_v11.Controllers.TrackAddForm

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>TrackAddForm</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    
    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Composer, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Composer, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Composer, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Milliseconds, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Milliseconds, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Milliseconds, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UnitPrice, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UnitPrice, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UnitPrice, "", new { @class = "text-danger" })
        </div>
    </div>

    @*<div class="form-group">
        @Html.LabelFor(model => model.AlbumList, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownList("AlbumId", Model.AlbumList, htmlAttributes: new { @class = "form-control", @size = 8})
             Can convert this to a single-select listbox by adding a "size" HTML attribute: 
            @Html.ValidationMessageFor(model => model.AlbumList, "", new { @class = "text-danger" })
        </div>
    </div>*@

    <div class="form-group">
        <label for="AlbumList" class="control-label col-md-2">Album List</label>
        <div class="col-md-10">
            <select name="AlbumId" class="form-control" size="8">
                @foreach (var item in Model.AlbumList)
                {
                    <option value="@item.Value">@item.Text</option>
                }
            </select>
            @Html.ValidationMessageFor(model => model.AlbumList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label for="MediaTypeList" class="control-label col-md-2">MediaType List</label>
        <div class="col-md-10">
            @foreach (var item in Model.MediaTypeList)
            {
                <div class="radio-inline">
                    <label><input type="radio" name="MediaTypeId" value="@item.Value" />@item.Text</label>
                </div>
            }
            @Html.ValidationMessageFor(model => model.MediaTypeList, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
